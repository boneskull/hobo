{"version":3,"sources":["../src/fs.js"],"names":[],"mappings":";;;;;;;;wBAEoB,UAAU;;;;0BACd,aAAa;;;;uBACT,QAAQ;;;;yBACN,WAAW;;;;wBACZ,WAAW;;;;oBACf,MAAM;;;;yBACD,WAAW;;;;IAKjB,KAAK;IAUL,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;AAvBxB,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUb,IAAM,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;qBACtB,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAEK,OAAO,EAAE;AAC7B,SAAO,EAAE,CAAC,SAAS,CAAC,yBAAK,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,WAAO,IAAI,CAAC,WAAW,EAAE,CAAC;GAC3B,CAAC,SACI,CAAC,YAAM;AACX,WAAO,KAAK,CAAC;GACd,CAAC,CAAC;CACN;;;;;;;;;UARe,KAAK;;;;UAAL,KAAK;;;QAAL,KAAK;;uBAUI,QAAQ,EAAE;AACjC,SAAO,8BAAU,QAAQ,CAAC,CACvB,IAAI,CAAC,UAAC,MAAM,EAAK;AAChB,QAAI,CAAC,MAAM,EAAE;AACX,aAAO,4BAAQ,MAAM,CAAC,IAAI,KAAK,sBAAoB,QAAQ,CAAG,CAAC,CAAC;KACjE;AACD,WAAO,4BAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;GAC9B,CAAC,CAAC;CACN;;;;;;;;;UARe,QAAQ;;;;UAAR,QAAQ;;;QAAR,QAAQ;AASjB,IAAM,IAAI,+BAAW,CAAC;;;;;;;;UAAhB,IAAI;;;;UAAJ,IAAI;;;QAAJ,IAAI;AACV,IAAM,UAAU,GAAG,4BAAQ,SAAS,+BAAW,CAAC;;;;;;;;UAA1C,UAAU;;;;UAAV,UAAU;;;QAAV,UAAU;AAChB,IAAM,MAAM,GAAG,4BAAQ,SAAS,6BAAS,CAAC;;;;;;;;UAApC,MAAM;;;;UAAN,MAAM;;;QAAN,MAAM","file":"fs.js","sourcesContent":["'use strict';\n\nimport Promise from 'bluebird';\nimport _fs from 'graceful-fs';\nimport _mkdirp from 'mkdirp';\nimport _emptyDir from 'empty-dir';\nimport userHome from 'user-home';\nimport path from 'path';\nimport _canWrite from 'can-write';\n\nconst fs = Promise.promisifyAll(_fs);\nexport default fs;\n\nexport function isGit(dirpath) {\n  return fs.statAsync(path.join(dirpath, '.git'))\n    .then((stat) => {\n      return stat.isDirectory();\n    })\n    .catch(() => {\n      return false;\n    });\n}\n\nexport function canWrite(filepath) {\n  return _canWrite(filepath)\n    .then((result) => {\n      if (!result) {\n        return Promise.reject(new Error(`Cannot write to ${filepath}`));\n      }\n      return Promise.resolve(true);\n    });\n}\nexport const home = userHome;\nexport const isDirEmpty = Promise.promisify(_emptyDir);\nexport const mkdirp = Promise.promisify(_mkdirp);\n"]}