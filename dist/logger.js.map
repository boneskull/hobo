{"version":3,"sources":["../src/logger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAY,CAAC;;AAEb,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;AACjC,IAAI,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;AAChF,IAAI,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;AAC3B,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;;AAC7B,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;;;;;;;;;;;;;AAE7B,IAAI,GAAG,YAAA,CAAC;;AAED,IAAM,MAAM,GAAG,OAAO,CAAC;AAC5B,SAAO,EAAE;AACP,aAAS,EAAA,qBAAG;;;AACV,OAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACX,IAAI,EAAE,CACN,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,eAAO,MAAK,IAAI,CAAC,CAAC;OACnB,EAAE,IAAI,CAAC,CAAC;KACZ;AACD,WAAO,EAAA,iBAAC,GAAG,EAAE;AACX,UAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,UAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;AACrD,UAAI,OAAO,EAAE;AACX,YAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,YAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EACvD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,qBAAW,QAAQ,SAAI,OAAO,CAAC,CAAC,CAAC,OAAI;OACtC;AACD,aAAO,EAAE,CAAC;KACX;AACD,UAAM,EAAA,kBAAG;;;AACP,OAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,IAAI,EAAK;AACnC,eAAK,IAAI,CAAC,GAAG,SAAS,OAAO,GAAG;AAC9B,cAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;AACtD,cAAI,KAAK,CAAC,UAAU,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACjD,gBAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;;AAElD,gBAAI,IAAI,CAAC,KAAK,EAAE;AACd,kBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;aAC3D;;AAED,gBAAI,IAAI,KAAK,OAAO,EAAE;AACpB,kBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC;aACzC;;AAED,gBAAI,IAAI,CAAC,MAAM,EAAE;AACf,kBAAI,CAAC,OAAO,MAAI,IAAI,CAAC,MAAM,CAAG,CAAC;aAChC;AACD,mBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;WAClC;AACD,cAAI,CAAC,IAAI,UAAQ,KAAK,EAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAChD,CAAC;OACH,EAAE,IAAI,CAAC,CAAC;KACV;GACF;AACD,MAAI,EAAE;AACJ,SAAK,EAAE,KAAK;AACZ,UAAM,EAAK,IAAI,CAAC,qBAAqB,MAAG;AACxC,SAAK,EAAE,KAAK;AACZ,UAAM,EAAE,OAAO;AACf,WAAO,EAAE;AACP,WAAK,EAAE;AACL,aAAK,EAAE,KAAK,CAAC,GAAG;AAChB,aAAK,EAAE,QAAQ;AACf,kBAAU,EAAE,CAAC;OACd;AACD,SAAG,EAAE;AACH,aAAK,EAAE,KAAK,CAAC,KAAK;AAClB,aAAK,EAAE,aAAa;AACpB,kBAAU,EAAE,CAAC;OACd;AACD,UAAI,EAAE;AACJ,aAAK,EAAE,KAAK,CAAC,IAAI;AACjB,aAAK,EAAE,MAAM;AACb,kBAAU,EAAE,CAAC;OACd;AACD,QAAE,EAAE;AACF,aAAK,EAAE,KAAK,CAAC,KAAK;AAClB,aAAK,EAAE,SAAS;AAChB,kBAAU,EAAE,CAAC;OACd;AACD,UAAI,EAAE;AACJ,aAAK,EAAE,KAAK,CAAC,MAAM;AACnB,aAAK,EAAE,SAAS;AAChB,kBAAU,EAAE,CAAC;OACd;AACD,WAAK,EAAE;AACL,aAAK,EAAE,KAAK,CAAC,GAAG;AAChB,aAAK,EAAE,aAAa;AACpB,kBAAU,EAAE,CAAC;OACd;KACF;GACF;AACD,MAAI,EAAA,gBAAG;AACL,UAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAC5B,WAAK,EAAE;AACL,WAAG,EAAA,eAAG;AACJ,iBAAO,IAAI,CAAC,MAAM,CAAC;SACpB;AACD,WAAG,EAAA,aAAC,KAAK,EAAE;AACT,cAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACtB,gBAAI,CAAC,MAAM,GAAG,KAAK,CAAC;WACrB,MAAM;AACL,kBAAM,IAAI,KAAK,yBAAuB,KAAK,OAAI,CAAC;WACjD;SACF;OACF;AACD,YAAM,EAAE;AACN,WAAG,EAAA,eAAG;AACJ,iBAAO,IAAI,CAAC,OAAO,CAAC;SACrB;AACD,WAAG,EAAA,aAAC,KAAK,EAAE;AACT,cAAI,CAAC,SAAS,EAAE,CAAC;AACjB,cAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,cAAI,CAAC,MAAM,EAAE,CAAC;SACf;OACF;KACF,CAAC,CAAC;;AAEH,QAAI,CAAC,MAAM,EAAE,CAAC;GACf;CACF,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;;;;UA/Gd,MAAM;;;;UAAN,MAAM;;;QAAN,MAAM;;qBAiHJ,wBAAC,IAAI,EAAK;AACvB,MAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AACvB,WAAO,GAAG,IAAI,MAAM,EAAE,CAAC;GACxB;AACD,SAAO,MAAM,CAAC,IAAI,CAAC,CAAC;CACrB","file":"logger.js","sourcesContent":["'use strict';\n\nlet stampit = require('stampit');\nlet EventEmittable = stampit.convertConstructor(require('events').EventEmitter);\nlet _ = require('./utils');\nlet chalk = require('chalk');\nlet meta = require('./meta');\n\nlet log;\n\nexport const Logger = stampit({\n  methods: {\n    _teardown() {\n      _(this.levels)\n        .keys()\n        .each((name) => {\n          delete this[name];\n        }, this);\n    },\n    _lineno(err) {\n      const caller = _.first(err.stack.split('\\n').slice(2));\n      const matches = caller.match(/(\\/[^:]+?):(\\d+):\\d+/);\n      if (matches) {\n        const path = require('path');\n        const relative = path.relative(path.join(__dirname, '..'),\n          matches[1]);\n        return `[${relative}:${matches[2]}]`;\n      }\n      return '';\n    },\n    _setup() {\n      _.each(this.levels, (level, name) => {\n        this[name] = function logFunc() {\n          const errorLevel = this.levels[this.level].errorLevel;\n          if (level.errorLevel >= errorLevel && !this.quiet) {\n            const args = [level.color.apply(null, arguments)];\n\n            if (this.emoji) {\n              args.unshift(require('node-emoji').get(level.emoji), ' ');\n            }\n\n            if (name === 'debug') {\n              args.unshift(this._lineno(new Error()));\n            }\n\n            if (this.prefix) {\n              args.unshift(`${this.prefix}`);\n            }\n            console.log.apply(console, args);\n          }\n          this.emit(`log:${level}`, _.format(arguments));\n        };\n      }, this);\n    }\n  },\n  refs: {\n    quiet: false,\n    prefix: `${meta.coloredNameAndVersion}:`,\n    emoji: false,\n    _level: 'debug',\n    _levels: {\n      debug: {\n        color: chalk.dim,\n        emoji: 'beetle',\n        errorLevel: 0\n      },\n      log: {\n        color: chalk.white,\n        emoji: 'point_right',\n        errorLevel: 1\n      },\n      info: {\n        color: chalk.blue,\n        emoji: 'bulb',\n        errorLevel: 2\n      },\n      ok: {\n        color: chalk.green,\n        emoji: 'ok_hand',\n        errorLevel: 3\n      },\n      warn: {\n        color: chalk.yellow,\n        emoji: 'warning',\n        errorLevel: 4\n      },\n      error: {\n        color: chalk.red,\n        emoji: 'exclamation',\n        errorLevel: 5\n      }\n    }\n  },\n  init() {\n    Object.defineProperties(this, {\n      level: {\n        get() {\n          return this._level;\n        },\n        set(value) {\n          if (this.levels[value]) {\n            this._level = value;\n          } else {\n            throw new Error(`Invalid log level \"${value}\"`);\n          }\n        }\n      },\n      levels: {\n        get() {\n          return this._levels;\n        },\n        set(value) {\n          this._teardown();\n          this._levels = value;\n          this._setup();\n        }\n      }\n    });\n\n    this._setup();\n  }\n}).compose(EventEmittable);\n\nexport default (opts) => {\n  if (_.isUndefined(opts)) {\n    return log || Logger();\n  }\n  return Logger(opts);\n};\n"]}