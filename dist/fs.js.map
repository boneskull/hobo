{"version":3,"sources":["../src/fs.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;wBAEO,UAAU;;;;0BACd,aAAa;;;;uBACT,QAAQ;;;;yBACN,WAAW;;;;wBACZ,WAAW;;;;oBACf,MAAM;;;;yBACD,WAAW;;;;AAEjC,IAAM,EAAE,GAAG,sBAAQ,YAAY,yBAAK,CAAC;qBACtB,EAAE;;AAEV,SAAS,KAAK,CAAC,OAAO,EAAE;AAC7B,SAAO,EAAE,CAAC,SAAS,CAAC,kBAAK,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAC5C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,WAAO,IAAI,CAAC,WAAW,EAAE,CAAC;GAC3B,CAAC,SACI,CAAC,YAAM;AACX,WAAO,KAAK,CAAC;GACd,CAAC,CAAC;CACN;;AAEM,SAAS,QAAQ,CAAC,QAAQ,EAAE;AACjC,SAAO,2BAAU,QAAQ,CAAC,CACvB,IAAI,CAAC,UAAS,MAAM,EAAE;AACrB,QAAI,CAAC,MAAM,EAAE;AACX,aAAO,sBAAQ,MAAM,CAAC,IAAI,KAAK,sBAAoB,QAAQ,CAAG,CAAC,CAAC;KACjE;AACD,WAAO,sBAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;GAC9B,CAAC,CAAC;CACN;;AACM,IAAM,IAAI,wBAAW,CAAC;;AACtB,IAAM,UAAU,GAAG,sBAAQ,SAAS,uBAAW,CAAC;;AAChD,IAAM,MAAM,GAAG,sBAAQ,SAAS,qBAAS,CAAC","file":"fs.js","sourcesContent":["'use strict';\n\nimport Promise from 'bluebird';\nimport _fs from 'graceful-fs';\nimport _mkdirp from 'mkdirp';\nimport _emptyDir from 'empty-dir';\nimport userHome from 'user-home';\nimport path from 'path';\nimport _canWrite from 'can-write';\n\nconst fs = Promise.promisifyAll(_fs);\nexport default fs;\n\nexport function isGit(dirpath) {\n  return fs.statAsync(path.join(dirpath, '.git'))\n    .then((stat) => {\n      return stat.isDirectory();\n    })\n    .catch(() => {\n      return false;\n    });\n}\n\nexport function canWrite(filepath) {\n  return _canWrite(filepath)\n    .then(function(result) {\n      if (!result) {\n        return Promise.reject(new Error(`Cannot write to ${filepath}`));\n      }\n      return Promise.resolve(true);\n    });\n}\nexport const home = userHome;\nexport const isDirEmpty = Promise.promisify(_emptyDir);\nexport const mkdirp = Promise.promisify(_mkdirp);\n"]}