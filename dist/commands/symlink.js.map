{"version":3,"sources":["../../src/commands/symlink.js"],"names":[],"mappings":"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","file":"symlink.js","sourcesContent":["'use strict';\n\nlet Promise = require('bluebird');\nlet fs = Promise.promisifyAll(require('fs'));\nlet mkdirp = Promise.promisify(require('mkdirp'));\nlet path = require('path');\nlet logger = require('./../logger');\nlet pkg = require('../../package.json');\n\nfunction symlink(cwd, log) {\n  log = log || logger;\n  cwd = cwd || process.cwd();\n  let config = pkg.config['digs-dev'];\n  let symlinks = config.symlink;\n  let successes = 0;\n  let failures = 0;\n\n  return Promise.map(symlinks, function link(relativeSrc) {\n    let dest = path.join(cwd, relativeSrc);\n    return fs.lstatAsync(dest)\n      .then(function unlinkSymlink(stats) {\n        if (!stats.isSymbolicLink()) {\n          let target = path.relative(cwd, dest);\n          return Promise.reject(`Skipping ${target}; not a symlink`);\n        }\n        return fs.unlinkAsync(dest);\n      })\n      .error(function mkdir() {\n        let dir = path.dirname(relativeSrc);\n        if (dir !== '.') {\n          return mkdirp(path.join(cwd, dir));\n        }\n      })\n      .then(function doSymlink() {\n        let src = path.join(__dirname, '..', relativeSrc);\n        return fs.symlinkAsync(src, dest)\n          .return(src);\n      })\n      .then(function report(src) {\n        let from = path.relative(cwd, src);\n        let to = path.relative(cwd, dest);\n        let relativeCwd = path.relative(cwd, process.cwd()) + path.sep;\n        log.log(`Symlinked ${from} => ${relativeCwd}${to}`);\n        successes++;\n      })\n      .catch(function fail(err) {\n        log.warn(err);\n        failures++;\n      });\n  })\n    .then(function done() {\n      log.ok(`Symlinked ${successes} file(s) with ${failures} ` +\n        `failure(s).`);\n    });\n}\n\nmodule.exports = symlink;\n"]}